<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Crazy Ark</title>
    <link>https://arkbriar.tk/</link>
    <description>Recent content on Crazy Ark</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright>
    <lastBuildDate>Fri, 28 Jul 2017 21:08:02 +0800</lastBuildDate>
    
	<atom:link href="https://arkbriar.tk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Boyer-Moore Majority Voting Algorithm</title>
      <link>https://arkbriar.tk/2017/07/boyer-moore-majority-voting-algorithm/</link>
      <pubDate>Fri, 28 Jul 2017 21:08:02 +0800</pubDate>
      
      <guid>https://arkbriar.tk/2017/07/boyer-moore-majority-voting-algorithm/</guid>
      <description>&lt;p&gt;刷leetcode时碰到的问题，本篇仅做简要描述，以及记录思考。&lt;/p&gt;

&lt;p&gt;参考自: &lt;a href=&#34;https://gregable.com/2013/10/majority-vote-algorithm-find-majority.html&#34;&gt;https://gregable.com/2013/10/majority-vote-algorithm-find-majority.html&lt;/a&gt;，一篇写的非常好的博客&lt;/p&gt;

&lt;p&gt;问题描述：考虑你有一个长度为n的&lt;strong&gt;无序&lt;/strong&gt;列表，现在你想知道列表中是否有一个值占据了列表的一半以上 (majority)，如果有的话找出这个数。&lt;/p&gt;

&lt;p&gt;这个问题的一个普遍的应用场景是在容错计算 (fault-tolerant computing) 中，在进行了多次冗余的计算后，输出最后多数计算得到的值。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://arkbriar.tk/about/</link>
      <pubDate>Wed, 26 Jul 2017 17:54:33 +0800</pubDate>
      
      <guid>https://arkbriar.tk/about/</guid>
      <description>This is about page 😞</description>
    </item>
    
    <item>
      <title>2017 Alibaba Middleware 24h Final (Just for Fun 😀)</title>
      <link>https://arkbriar.tk/2017/07/2017-alibaba-middleware-24h-final-just-for-fun-/</link>
      <pubDate>Wed, 26 Jul 2017 16:59:26 +0800</pubDate>
      
      <guid>https://arkbriar.tk/2017/07/2017-alibaba-middleware-24h-final-just-for-fun-/</guid>
      <description>&lt;p&gt;今年阿里中间件比赛的时候不巧博主心情不好，外加要准备期末考试，并没有参加，非常遗憾。不过好在好基友 &lt;a href=&#34;https://ericfu.me&#34;&gt;Eric Fu&lt;/a&gt; 参加并获得了冠军！今年的主题是分布式数据库，如果想了解详情及复赛的解题思路请读者前往 Eric 的博客。&lt;/p&gt;

&lt;p&gt;博主没有参加甚是遗憾，外加看到题目手痒难耐，遂问基友讨了最后的24h极客赛来玩一玩。&lt;/p&gt;

&lt;h2 id=&#34;24h-topkn&#34;&gt;24h TOPKN&lt;/h2&gt;

&lt;p&gt;题目是分布式数据库上的分页排序，对应的SQL执行为 order by id limit k，n；主要的技术挑战为&amp;rdquo;分布式&amp;rdquo;的策略，赛题中使用多个文件模拟多个数据分片。&lt;/p&gt;

&lt;p&gt;简称 top(k, n)。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>